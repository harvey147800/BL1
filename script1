local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("TITLE", "Midnight")

-- First Tab
local Tab1 = Window:NewTab("TabName")
local Section1 = Tab1:NewSection("Section Name")

-- Keybinds
Section1:NewKeybind("GK", "KeybindInfo", Enum.KeyCode.K, function()
    local args = { [1] = "Home", [2] = "GK" }
    game:GetService("ReplicatedStorage").Packages.Knit.Services.TeamService.RE.Select:FireServer(unpack(args))
end)

Section1:NewKeybind("CF", "KeybindInfo", Enum.KeyCode.J, function()
    local args = { [1] = "Home", [2] = "CF" }
    game:GetService("ReplicatedStorage").Packages.Knit.Services.TeamService.RE.Select:FireServer(unpack(args))
end)

Section1:NewKeybind("Tougle GUI", "KeybindInfo", Enum.KeyCode.RightShift, function()
    Library:ToggleUI()
end)

-- Dropdown for Position Selection
local positions = {"LW", "CF", "RW", "CB"} 
local selectedPosition = "GK"

Section1:NewDropdown("Choose Position", "Select a position to play", positions, function(value)
    selectedPosition = value
    print("Selected Position: " .. selectedPosition)
end)

-- Button to Select Position
Section1:NewButton("Confirm Position(based on dropdown)", "Select the chosen position", function()
    local args = { [1] = "Home", [2] = selectedPosition }
    game:GetService("ReplicatedStorage").Packages.Knit.Services.TeamService.RE.Select:FireServer(unpack(args))
    print("Position Set: " .. selectedPosition)
end)

-- === Shooting System === --
local Tab2 = Window:NewTab("Shooting")
local Section2 = Tab2:NewSection("Shooting Controls")

-- Slider for Power Control
local power = 110 -- Default power value
Section2:NewSlider("Shot Power", "Adjust the shot power", 200, 110, function(value)
    power = value
    print("Shot Power: " .. power)
end)

-- Keybind to Shoot
Section2:NewKeybind("Shoot", "Shoot the ball where the mouse is looking", Enum.KeyCode.Z, function()
    local mouse = game.Players.LocalPlayer:GetMouse()
    local direction = mouse.Hit.lookVector -- Get the direction the mouse is looking

    -- Play the animation
    local animationId = "18668827116" -- Replace with your animation ID
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")

    if humanoid then
        local animator = humanoid:FindFirstChildOfClass("Animator")
        if not animator then
            animator = Instance.new("Animator")
            animator.Parent = humanoid
        end
        
        local animation = Instance.new("Animation")
        animation.AnimationId = "rbxassetid://" .. animationId
        
        local animationTrack = animator:LoadAnimation(animation)
        animationTrack:Play() -- Play the animation immediately

        -- Play sound at the same time as the animation starts
        game:GetService("ReplicatedStorage").Assets.Sfx.KingsImpact:Play()

        -- Fire the shot immediately after animation starts
        local args = { [1] = power, [4] = direction }
        game:GetService("ReplicatedStorage").Packages.Knit.Services.BallService.RE.Shoot:FireServer(unpack(args))
        print("Shot fired with power: " .. power .. " in direction: " .. tostring(direction))
    end
end)

-- === Movement System === --
local Tab3 = Window:NewTab("Movement")
local Section3 = Tab3:NewSection("Teleportation")

local teleportActive = false
Section3:NewKeybind("Auto Teleport", "Toggle Auto Teleport to football hitbox", Enum.KeyCode.Y, function()
    teleportActive = not teleportActive
    print("Auto Teleport is now", teleportActive and "Active" or "Inactive")
    while teleportActive and task.wait(0.00000000001) do
        local function findHitbox()
            for _, descendant in pairs(workspace:GetDescendants()) do
                if descendant.Name == "Hitbox" and descendant.Parent and descendant.Parent.Name == "Football" then
                    return descendant
                end
            end
            return nil
        end
        local hitbox = findHitbox()
        if hitbox then
            local localPlayer = game.Players.LocalPlayer
            local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
            local rootPart = character and character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local hitboxPos = hitbox.Position
                local newPosition = hitboxPos + Vector3.new(0, 3, 0)
                rootPart.CFrame = CFrame.new(newPosition)
                print("Teleported to Football Hitbox at:", newPosition)
            end
        else
            warn("Football.Hitbox not found in Workspace!")
        end
    end
end)

local Section4 = Tab3:NewSection("Speed Control")
local speedActive = false
local targetSpeed = 50
local speedChangeRate = 1

Section4:NewToggle("Increase Movement Speed", "Increase the player's movement speed", function(state)
    speedActive = state
    print("Movement speed increase is now", speedActive and "Active" or "Inactive")
end)

Section4:NewSlider("Target Speed", "Set the desired movement speed", 100, 50, function(value)
    targetSpeed = value
    print("Target Speed set to " .. targetSpeed .. " studs/s.")
end)

Section4:NewSlider("Speed Change Rate", "Adjust the speed change rate", 0.1, 5, function(value)
    speedChangeRate = value
    print("Speed Change Rate set to " .. speedChangeRate .. " studs/s.")
end)

local RunService = game:GetService("RunService")
local bodyVelocity = nil
RunService.Heartbeat:Connect(function()
    if speedActive then
        local localPlayer = game.Players.LocalPlayer
        local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        local camera = workspace.CurrentCamera
        if humanoidRootPart then
            if not bodyVelocity then
                bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.MaxForce = Vector3.new(100000, 0, 100000)
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.Parent = humanoidRootPart
            end
            local moveDirection = Vector3.new(0, 0, 0)
            if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.W) then
                moveDirection = camera.CFrame.LookVector
            elseif game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.S) then
                moveDirection = -camera.CFrame.LookVector
            elseif game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.A) then
                moveDirection = -camera.CFrame.RightVector
            elseif game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.D) then
                moveDirection = camera.CFrame.RightVector
            end
            if moveDirection.Magnitude > 0 then
                moveDirection = moveDirection.Unit
            end
            bodyVelocity.Velocity = moveDirection * targetSpeed * speedChangeRate
        end
    elseif bodyVelocity then
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    end
end)
